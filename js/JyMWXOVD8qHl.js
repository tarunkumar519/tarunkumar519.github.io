"use strict";!function(e){try{var r=function(){var r=0;return new Promise(function(o,t){var n=setInterval(function(){e.FS?(clearInterval(n),o(e.FS)):r++>35&&(Plex.debugLog()&&console.log("FullStory: FullStory object not loaded within time limit. Waited: 3500ms!"),clearInterval(n),t())},100)})},o={setUserProps:function(e){t.setUserProps(e),Plex.debugLog()&&console.log("FullStory: User Props:",t.userProps)},trackEvent:function(r,o){r&&(e.FS("trackEvent",{name:r,properties:o}),Plex.debugLog()&&console.log("FullStory: Triggered FullStory event: ",r))}},t={userProps:{type:"user",properties:{deviceIdentifier:Plex.getClientIdentifier()}},init:function(){return t.setUserProps(),o},setUserProps:function(r){r=r||{},t.userProps.properties=Object.assign({},t.userProps.properties,r),e.FS("setProperties",t.userProps),Plex.debugLog()&&console.log("FullStory: Set FullStory properties:",t.userProps)}};document.addEventListener("SiteThirdPartyConsentGiven",function(){r().then(function(){e.PlexFS=t.init()}).catch(function(){Plex.debugLog()&&console.error("FullStory: FullStory not available or not loaded on time!")})})}catch(e){Plex.debugLog()&&console.error("FullStory:",e)}}(window);